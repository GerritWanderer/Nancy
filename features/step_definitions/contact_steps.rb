# Generated by cucumber_scaffold - http://github.com/andyw8/cucumber_scaffold

Given /^a contact exists$/ do
  @contact = Contact.create!(valid_contact_attributes)
end

Then /^I should see the following contact:$/ do |expected_table|
  
  
  show_fields_css_query = 'body p b'
  
  
  actual_table = tableish(show_fields_css_query, lambda{|label| [label, label.next]})   
  actual = {}
  actual_table.each do |form_entry|
    attr_name = form_entry[0]
    attr_value = form_entry[1]
    actual[attr_name] = attr_value
  end
  assert_equal actual, expected_table.rows_hash
end

Then /^I should see the following contacts:$/ do |expected_table|
  expected_table.diff!(tableish('table tr', 'td,th'))
end

Given /^the following contacts:$/ do |table|
  hashes = replace_spaces_with_underscores_in_keys(table.hashes)
  @contacts = Contact.create!(hashes)
end

Given /^the following contact:$/ do |table|
  hashes = replace_spaces_with_underscores_in_keys(table.rows_hash)
  @contact = Contact.create!(hashes)
end

def valid_contact_attributes
  # You may want to a factory for this
  {}
end




Then(/^I should see the (\d+)(?:st|nd|rd|th) location from (\d+)(?:st|nd|rd|th) customer$/) do |location, customer|
	locations = find_models("location", "customer_id: #{customer}")
	location = locations[location.to_i - 1]
	contacts = find_models("contact", "location_id: #{location.id}")
	
	counter = 0
  contacts.each do |contact|
		counter+=1
    Then %{I should see "#{contact.salutation} #{contact.title} #{contact.firstname} #{contact.lastname}" within "div.customer div.contacts ul.record li:first-child"}
  	Then %{I should see "#{contact.department}" within "div.customer div.contacts ul.record li:nth-child(2)"}
  	Then %{I should see "Fon: #{contact.fon}" within "div.customer div.contacts ul.record li:nth-child(3) span:first-child"}
  	Then %{I should see "Fon: #{contact.fax}" within "div.customer div.contacts ul.record li:nth-child(3) span:nth-child(2)"}
  	Then %{I should see "Fon: #{contact.mobile}" within "div.customer div.contacts ul.record li:nth-child(3) span:first-child(3)"}
	end
end