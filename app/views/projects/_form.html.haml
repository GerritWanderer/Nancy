#top_form{:style => "display: #{'none' unless @show_project_form}"}
  .title
    %h3= t(:project_form_create)
  - if @project.errors.any?
    .errors
      %h3= t('errors.template.header', :model=> Project.model_name.human, :count=> @project.errors.count)
      %ul
        - @project.errors.full_messages.each do |msg|
          %li= msg
      .clear
  .layout
    = form_for(@project, :builder => TippedFormBuilder) do |f|
      %fieldset.project
        %legend= t(:project_information)
        %ul
          %li.field.twoColumn.tipped
            = f.label :title
            = f.text_field :title
          %li.field.twoColumn.twoRow.tipped
            = f.label :description
            = f.text_area :description
          .clear
          %li.field.half.tipped
            = f.label :discount, :class => 'left'
            = f.text_field :discount, :class => 'left'
            = f.label :budget, :class => 'right'
            = f.text_field :budget, :class => 'right'
          %li.field.half
            %input.left
            %input.right
      .buttons
        %ul
          %li.toggle
            -if @show_project_form
              = link_to t(:project_form_close), projects_path, :class => 'inactive'
            -else
              &nbsp;
            %li.submit
              - if @show_project_form
                = f.hidden_field :customer_id, :value => @customer.id
                = f.hidden_field :contact_id, :value => @contact.id
                = f.submit t('helpers.submit.submit', :model=> Project.model_name.human), :class => "submit"
              - else
                = link_to t(:project_form_create), new_project_path, :class => 'active'
        .clear
    .right_column{:style => "display: #{'none' unless @show_project_form}"}
      = form_tag new_project_path, :method => :get, :remote => false do
        %fieldset.customer
          %legend #{Customer.model_name.human} & #{Contact.model_name.human}
          %ul
            %li.field
              = select_tag(:customer_id, options_for_select(@customers.map {|c| [c.name, c.id]}, params[:customer_id].to_i), {:onchange => "this.form.customerSubmit.click();"})
              - # %input{:type=>"submit", :value=>"submit", :name=>"customerSubmit", :style=>"display:none"}
      = form_tag new_project_path, :method => :get, :remote => false do
        %fieldset.contact
          %ul
            %li.field= select_tag(:contact_id, options_for_select(@contacts.map {|c| [c.firstname, c.id]}), {:onchange => "$('input#project_contact_id').val(this.value)"})